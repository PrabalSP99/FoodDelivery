{"ast":null,"code":"var _jsxFileName = \"/Users/prabalparihar/Downloads/Project/MJ1_FD/fdapp/src/screen/userOrder.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllOrder = () => {\n  _s();\n  const [orderData, setorderData] = useState([]);\n  const dataEmail = localStorage.getItem('userEmail');\n  const loadData = async () => {\n    const res = await fetch(`http://localhost:5000/myorderdata?email=${dataEmail}`, {\n      method: 'GET',\n      headers: {\n        'content-Type': 'application/json'\n      }\n      //   body: JSON.stringify({email : dataEmail})\n    });\n\n    let response = await res.json();\n    setorderData(response.order_data);\n    console.log(response);\n  };\n  useEffect(() => {\n    loadData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: orderData.map(item => {\n          /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card\",\n            style: \"width: 18rem;\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \" \",\n              className: \"card-img-top\",\n              alt: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                v: \"card-title\",\n                children: \"Card title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"card-text\",\n                children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                class: \"btn btn-primary\",\n                children: \"Go somewhere\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" hello world\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n};\n_s(AllOrder, \"nn6chmA1IoXLbwBUaqEzc15BtXA=\");\n_c = AllOrder;\nexport default AllOrder;\n\n// const AllOrder =  () => {\n\n//       const [orderData, setorderData] = useState([])\n//      const loginEmail = localStorage.getItem('userEmail')\n\n//      const loadData = async()=>{\n//         const res = await fetch('http://localhost:5000/order', {\n//         method: 'GET',\n//         headers: {\n//             'content-Type': 'application/json'\n//         },\n//         // body: JSON.stringify({email : loginEmail})\n//      })\n\n//         let response = await res.json()\n//          setorderData(response)\n//         console.log(response);\n\n//     }\n\n//     useEffect(() => {\n//         loadData();\n//     },[])\n\n//     return (\n//         <div>\n//             <div>\n//                 <Navbar />\n//             </div>\n\n//                 <div className='container'>\n//                     <div className='row'>\n\n//                           {\n\n//                             orderData !== [] ? orderData.map((filteritem)=>{\n//                               return <div> {filteritem.email}\n//                               {filteritem.email === loginEmail ? console.log(filteritem.email): console.log(\"bad fetchig\")}\n//                               </div>\n\n//                               {/* {filteritem.email===loginEmail? Array(filteritem.order).map((item)=>{\n//                                 return <div>\n//                                     {item.name}\n//                                 </div>\n//                               }):console.log('error in fetching')} */}\n\n//                             }) :console.log('not work')\n//                           }\n//                     </div>\n//                 </div>\n\n//             <div> hello world</div>\n\n//             <Footer />\n//         </div>\n//     )\n// }\n\n// export default AllOrder;\n\n// <div className='container'>\n//                 <div className='row'>\n\n//                 {orderData!=={}?Array(orderData).map((chk)=>{\n//                     return(\n//                         orderData.order_data ? orderData.order_data.slice(0).reverse().map((it)=>{\n//                             console.log('it works', orderData.order_data);\n//                             return Array(it).map((arrayData)=>{\n//                                 return(\n\n//                                     <div>\n//                                    { arrayData.orderdate ? <div className='m-auto mt-5'>\n\n//                                        {arrayData.orderdate}\n\n//                                        <hr/>\n//                                    </div>\n\n//                                      : <div className='col-12 col-md-6 col-lg-3' >\n//                                                             <div className=\"card mt-3\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\n//                                                                 {/* <img src={arrayData.img} className=\"card-img-top\" alt=\"...\" style={{ height: \"120px\", objectFit: \"fill\" }} /> */}\n//                                                                 <div className=\"card-body\">\n//                                                                     <h5 className=\"card-title\">{arrayData.name}</h5>\n//                                                                     <div className='container w-100 p-0' style={{ height: \"38px\" }}>\n//                                                                         <span className='m-1'>{arrayData.qty}</span>\n//                                                                         <span className='m-1'>{arrayData.size}</span>\n//                                                                         <span className='m-1'>{arrayData.orderData}</span>\n//                                                                         <div className=' d-inline ms-2 h-100 w-20 fs-5' >\n//                                                                             â‚¹{arrayData.price}/-\n//                                                                         </div>\n//                                                                     </div>\n//                                                                 </div>\n//                                                             </div>\n\n//                                         </div>\n//                                      }\n\n//                                   </div> \n//                                 )\n//                             })\n//                         }) :console.log(\"error in loop2\") \n\n//                     )\n//                 }):console.log(\"error in loop1\")}\n//                 </div>            \n//             </div>\nvar _c;\n$RefreshReg$(_c, \"AllOrder\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","Footer","jsxDEV","_jsxDEV","AllOrder","_s","orderData","setorderData","dataEmail","localStorage","getItem","loadData","res","fetch","method","headers","response","json","order_data","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","item","class","style","src","alt","v","href","_c","$RefreshReg$"],"sources":["/Users/prabalparihar/Downloads/Project/MJ1_FD/fdapp/src/screen/userOrder.jsx"],"sourcesContent":["import React,{useEffect, useState} from 'react'\nimport Navbar from '../components/Navbar'\nimport Footer from '../components/Footer'\n\n\n\nconst AllOrder =  () => {\n\n    const [orderData, setorderData] = useState([])\n   const dataEmail = localStorage.getItem('userEmail')\n\n\n   const loadData = async()=>{\n      const res = await fetch(`http://localhost:5000/myorderdata?email=${dataEmail}`, {\n      method: 'GET',\n      headers: {\n          'content-Type': 'application/json'\n      },\n    //   body: JSON.stringify({email : dataEmail})\n   })\n    \n      let response = await res.json()\n       setorderData(response.order_data)\n      console.log(response);\n     \n  }\n\n  useEffect(() => {\n      loadData();\n  },[])\n\n  return (\n      <div>\n          <div>\n              <Navbar />\n          </div>\n                 \n              <div className='container'>\n                  <div className='row'>\n                  {orderData.map((item)=>{\n\n                    <div class=\"card\" style=\"width: 18rem;\">\n  <img src=\" \" className=\"card-img-top\" alt=\"...\" />\n  <div className=\"card-body\">\n    <h5 v=\"card-title\">Card title</h5>\n    <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n    <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\n  </div>\n</div>\n\n\n                  })}\n                \n                  </div>\n              </div> \n             \n\n\n\n          <div> hello world</div>\n\n          <Footer />\n      </div>\n  )\n}\n            \nexport default AllOrder;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const AllOrder =  () => {\n\n//       const [orderData, setorderData] = useState([])\n//      const loginEmail = localStorage.getItem('userEmail')\n \n\n//      const loadData = async()=>{\n//         const res = await fetch('http://localhost:5000/order', {\n//         method: 'GET',\n//         headers: {\n//             'content-Type': 'application/json'\n//         },\n//         // body: JSON.stringify({email : loginEmail})\n//      })\n      \n//         let response = await res.json()\n//          setorderData(response)\n//         console.log(response);\n       \n//     }\n\n//     useEffect(() => {\n//         loadData();\n//     },[])\n\n//     return (\n//         <div>\n//             <div>\n//                 <Navbar />\n//             </div>\n                   \n//                 <div className='container'>\n//                     <div className='row'>\n        \n//                           {\n                           \n//                             orderData !== [] ? orderData.map((filteritem)=>{\n//                               return <div> {filteritem.email}\n//                               {filteritem.email === loginEmail ? console.log(filteritem.email): console.log(\"bad fetchig\")}\n//                               </div>\n                             \n                              \n\n//                               {/* {filteritem.email===loginEmail? Array(filteritem.order).map((item)=>{\n//                                 return <div>\n//                                     {item.name}\n//                                 </div>\n//                               }):console.log('error in fetching')} */}\n\n//                             }) :console.log('not work')\n//                           }\n//                     </div>\n//                 </div>\n               \n\n\n\n//             <div> hello world</div>\n\n//             <Footer />\n//         </div>\n//     )\n// }\n              \n// export default AllOrder;\n\n\n// <div className='container'>\n//                 <div className='row'>\n                   \n//                 {orderData!=={}?Array(orderData).map((chk)=>{\n//                     return(\n//                         orderData.order_data ? orderData.order_data.slice(0).reverse().map((it)=>{\n//                             console.log('it works', orderData.order_data);\n//                             return Array(it).map((arrayData)=>{\n//                                 return(\n            \n//                                     <div>\n//                                    { arrayData.orderdate ? <div className='m-auto mt-5'>\n\n//                                        {arrayData.orderdate}\n\n//                                        <hr/>\n//                                    </div>\n                                   \n//                                      : <div className='col-12 col-md-6 col-lg-3' >\n//                                                             <div className=\"card mt-3\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\n//                                                                 {/* <img src={arrayData.img} className=\"card-img-top\" alt=\"...\" style={{ height: \"120px\", objectFit: \"fill\" }} /> */}\n//                                                                 <div className=\"card-body\">\n//                                                                     <h5 className=\"card-title\">{arrayData.name}</h5>\n//                                                                     <div className='container w-100 p-0' style={{ height: \"38px\" }}>\n//                                                                         <span className='m-1'>{arrayData.qty}</span>\n//                                                                         <span className='m-1'>{arrayData.size}</span>\n//                                                                         <span className='m-1'>{arrayData.orderData}</span>\n//                                                                         <div className=' d-inline ms-2 h-100 w-20 fs-5' >\n//                                                                             â‚¹{arrayData.price}/-\n//                                                                         </div>\n//                                                                     </div>\n//                                                                 </div>\n//                                                             </div>\n\n//                                         </div>\n//                                      }\n                                      \n//                                   </div> \n//                                 )\n//                             })\n//                         }) :console.log(\"error in loop2\") \n                    \n//                     )\n//                 }):console.log(\"error in loop1\")}\n//                 </div>            \n//             </div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}